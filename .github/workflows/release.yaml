name: Build ESP32

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Set environment variables
        run: echo "VERSION=$(head -1 version)" >> $GITHUB_ENV

      - name: Check if Git-Tag already exist
        run: |
          TAG="v${{ env.VERSION }}"
          if git show-ref --tags --verify --quiet "refs/tags/${TAG}" && [[ "${TAG}" != *"DEV"* ]]; then
            echo "Tag ${TAG} already exists"
            exit 1
          fi
          echo "Tag ${TAG} OK"

      - name: Check if version file contains linebreak at the end
        run: |
          if [ -n "$(tail -c 1 "version")" ]; then
            echo "The version file has no linebreak at the end"
            exit 1
          fi

      - name: Update hash in Global properties
        run: |
          sed -i -e 's|*GLOBAL_HASH = "\(.*\)";|*GLOBAL_HASH = "'"$(git rev-parse --short HEAD)"'";|g' components/cmd_system/cmd_system.c
          sed -i -e 's/DEV-VERSION/${{ env.VERSION }}/g' CMakeLists.txt

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install htmlmin esptool

      - name: Minify HTML files
        run: python .github/workflows/shrinkHTML.py
        shell: sh

      - name: Build ESP32 firmware
        run: platformio run -e esp32

      - name: ZIP all ESP32 build output
        run: |
          mkdir -p release
          zip -r release/esp32_build_v${{ env.VERSION }}.zip .pio/build/esp32/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: esp32-firmware-v${{ env.VERSION }}
          path: release/esp32_build_v${{ env.VERSION }}.zip
